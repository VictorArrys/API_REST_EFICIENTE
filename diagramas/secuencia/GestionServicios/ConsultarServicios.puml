@startuml ConsultarServicios


box Cliente
    actor Aspirante as a
    participant SolicitudesServicio as b <<GUI>> 
    participant SolicitudesServicioController as c <<Controller>>
    participant SolicitudesServicioDAO as d <<DAO>>
    participant RespuestasAPI as ra <<GUI>>
end box

box Servidor
    participant ElCamelloAPI as e <<API>>
    participant GestionToken as f
    participant GestionServicios as g <<Component>>
    participant SolicitudServicioDAO as h <<DAO>>
    database elCamelloDB as db
end box
create b
c ->> b : InitializeComponent()
a ->> b : seleccionarEstatus()
a -> b : btnBuscarSolicitudes_Click()
activate a
activate b

b ->> c : btnBuscarSolicitudes_Click()
activate c

c ->> c : BucarSolicitudes()
activate c

c -> d : GetSolicitudesAspirante(\nidAspirante:int,\nindiceEstatus:int,token:string\n):List<SolicitudServicio>
activate d

note right of d 
    **header**
    x-accces-token : string

    **params**
    idAspirante: int

    **query**
    estatus : string
end note
d -> e : **GET** /v1/perfilAspirantes/:idAspirante/solicitudesServicios?estatus=:estatus

e -> f : ValidarTokenTipoUsuario(\ntoken: string, \n"Aspirante")
activate e
activate f
f -->> e: validacionToken

alt validacionToken.statusCode == 200  && validacionToken.tokenData['estatus'] == 1
    e ->> g : getSolicitudesServicioAspirante(\nidAspirante:int, \nestatus:string, \ncallback:function): void
    activate g

    g ->> h : getSolicitudesServicioAspirante(\nidAspirante:int, \nestatus:string, \ncallback:function): void
    activate h

    h -> db : SELECT
    db -->> h : respuesta
    break respuesta.error != null
        h ->> e : callback(500, mensaje.ErrorInterno): void
        activate e
        note left of e 
            **payload**
            mensajeError: string
        end note
        e -->> d : respuesta

        create ra
        deactivate e 

        d -> ra : new
        d -> ra : gestionRespuestasApi(\n"GetSolicitudesEmpleo", \nrespuesta)

        a -> ra : clicAceptar()
        ra -> ra: Close()
        destroy ra
    end
    h ->> e : callback(200, listaSolicitudes): void
    activate e

    note left of e 
        **payload**
        [
            {
                idSolicitudServicio: int
                titulo : string
                descripcion": stringÂ¡
                estatus: int
                fechaRegistro : datetimr
                idPerfilAspirante: int
                demandante : {
                    idPerfilDemandante: string
                    nombre : string
                }
            }
        ]
    end note
    e -->> d : respuesta
    deactivate e

    d -->> c : listaSolcitudes
    deactivate c

    c ->> c : ActualizarPantalla():void
    
    alt Aceptar Solicitud
        ref over b
            Aceptar solicitud de servicio
        end ref
    else Rechazar Solicitud
        ref over b
            Rechazar Solicitud de servicio
        end ref
    else Cerrar Ventana
        a -> b : clickCerrar()
        b -> c: Close()
        destroy b
        destroy c 
    end    
end



@enduml